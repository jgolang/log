package core

import "time"

// Formater interface for implement a logger...
type Formater interface {
	Development(buf *[]byte, t time.Time, file string, line int, function string, p Priority, s string, stack [][]byte)
	Production(buf *[]byte, t time.Time, file string, line int, function string, p Priority, s string, stack [][]byte)
}

// These flags define which text to prefix to each log entry generated by the Logger.
// Bits are or'ed together to control what's printed.
// There is no control over the order they appear (the order listed
// here) or the format they present (as described in the comments).
// The prefix is followed by a colon only when Llongfile or Lshortfile
// is specified.
// For example, flags Ldate | Ltime (or LstdFlags) produce,
//	2009/01/23 01:23:23 message
// while flags Ldate | Ltime | Lmicroseconds | Llongfile produce,
//	2009/01/23 01:23:23.123123 /a/b/c/d.go:23: message
const (
	Ldate          = 1 << iota                                                                                // the date in the local time zone: 2009-01-23
	Ltime                                                                                                     // the time in the local time zone: 01:23:23
	Lmicroseconds                                                                                             // microsecond resolution: 01:23:23.123123.  assumes Ltime. * available in mode prod
	Llevel                                                                                                    // the level message information
	Lcaller                                                                                                   // full file name and line number: /a/b/c/d.go:23 * available in mode prod
	Lfile                                                                                                     // file name: package/d.go * available in mode prod
	Lline                                                                                                     // the line file: package/d.go:23. assumes Lfile. * available in mode prod
	Lfunc                                                                                                     // func name: (function) * available in mode prod
	Lstack                                                                                                    // stack trace
	LUTC                                                                                                      // if Ldate or Ltime is set, use UTC rather than the local time zone
	Linfo                                                                                                     // add flags info to mode production JSON format * available in mode prod
	JSONFormat                                                                                                // activate JSON Format output mode
	TerminalFormat                                                                                            // activate Terminal Format output mode
	LstdDevFlags   = Ldate | Ltime | Lmicroseconds | Llevel | Lfile | Lline | Lfunc | Lstack | TerminalFormat // initial values for the standard development logger
	LstdProdFlags  = Ldate | Ltime | Lmicroseconds | Lcaller | JSONFormat                                     // initial values for the standard production logger
)
